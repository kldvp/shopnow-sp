<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function ($scope) {
	/* widget controller */
	var c = this;
	function init() {
		$scope.orders = c.data.orders;
		$scope.orderStatuses = c.data.orderStatuses;
		$scope.selectedStatus = '';
	}
	init();
	// show cancel button based on order status
	$scope.showCancel = function (order) {
		return ['shipping', 'processing'].includes(order.statusClass);
	}
	$scope.onStatusChange = function () {
		console.log('selected status :', $scope.selectedStatus);
		$scope.server.get({
			action: 'get_items',
			status: $scope.selectedStatus,
		}).then(function (res) {
			$scope.orders = res.data.orders;
		});
	}
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.custom-input-group {
  max-width: 120px;
  margin-bottom: 15px;
}

.margin-10 {
  margin: 10px 0;
}

.text-center {
  text-align: center;
}

.img-thumbnail {
  width: 100px;
  /* Consistent width */
  height: 100px;
  /* Consistent height */
  object-fit: cover;
  /* Ensures images cover the specified area without distortion */
}

.order-status {
  display: inline-block;
  padding: 3px 7px;
  border-radius: 3px;
  font-size: 12px;
  font-weight: bold;
}

.status-delivered {
  background-color: #dff0d8;
  color: #3c763d;
}

.status-processing {
  background-color: #fcf8e3;
  color: #8a6d3b;
}

.status-cancelled {
  background-color: #f2dede;
  color: #a94442;
}

.status-shipping {
  background-color: #d9edf7;
  color: #31708f;
}

.order-date {
  color: #777;
  font-size: 13px;
}

.action-buttons .btn {
  margin-bottom: 5px;
  width: 100%;
  text-align: center;
}

/* Remove all borders within the .no-border table */
.table-responsive.no-border table,
.table-responsive.no-border table tr,
.table-responsive.no-border table td {
  border-top: none !important;
  border-bottom: none !important;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>shopnow_shop_orders</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>ShopNow shop orders</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	function formatDate(date) {
		var gd = new GlideDate();
		gd.setValue(date);
		var formattedDate = gd.getByFormat("MMMM dd, yyyy");
		return formattedDate;
	}
	// build query for category
	function buildStatusQuery() {
		if (!input || !input.status) return null;
		let query = "order_status=<placeholder>";
		return query.replaceAll('<placeholder>', input.status);
	}
	const statusKey = buildStatusQuery();
	var orders = [];
	function getOrders() {
		var ordersGr = new GlideRecord("x_1550111_shopnow_shop_orders");
		ordersGr.addQuery('ordered_by', gs.getUserID());
		if (statusKey) ordersGr.addEncodedQuery(statusKey);
		ordersGr.orderByDesc("sys_created_on");
		ordersGr.query();
		while (ordersGr.next()) {
			var orderObj = {
				placedDate: formatDate(new GlideDateTime(ordersGr.sys_created_on).getDate()),
				total: ordersGr.total_amount.getDisplayValue(),
				shipTo: ordersGr.ordered_by.name.getDisplayValue(),
				orderId: ordersGr.number.getDisplayValue(),
				status: ordersGr.order_status.getDisplayValue(),
				statusClass: ordersGr.order_status.getValue(),
				quantity: ordersGr.quantity.getValue(),
				item: {
					name: ordersGr.product.title.getDisplayValue(),
					img: ordersGr.product.picture.getDisplayValue() + '?t=medium',
					link: '?id=shop_product_info&sys_id=' + ordersGr.product,
				},
			};
			orders.push(orderObj);
		}
		return orders;
	}
	function getOrderStatuses() {
		var orderStatusesGr = new GlideAggregate("x_1550111_shopnow_shop_orders");
		orderStatusesGr.addQuery('ordered_by', gs.getUserID());
		orderStatusesGr.groupBy("order_status");
		orderStatusesGr.query();
		var orderStatuses = [{ label: 'All Orders', name: '' }];
		while (orderStatusesGr.next()) {
			var categoryObj = {
				label: orderStatusesGr.order_status.getDisplayValue(),
				name: orderStatusesGr.order_status.getValue(),
			};
			orderStatuses.push(categoryObj);
		}
		return orderStatuses;
	}
	data.orders = getOrders();
	data.orderStatuses = getOrderStatuses();
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-11-15 11:26:11</sys_created_on>
        <sys_id>fecc288fc3bd521065a51933e401319b</sys_id>
        <sys_mod_count>83</sys_mod_count>
        <sys_name>ShopNow shop orders</sys_name>
        <sys_package display_value="ShopNow" source="x_1550111_shopnow">f7cf54cbc37d521065a51933e4013116</sys_package>
        <sys_policy/>
        <sys_scope display_value="ShopNow">f7cf54cbc37d521065a51933e4013116</sys_scope>
        <sys_update_name>sp_widget_fecc288fc3bd521065a51933e401319b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-11-18 11:27:44</sys_updated_on>
        <template><![CDATA[<div class="container">
  <div class="row">
    <div class="col-md-10">
      <!-- Filter Options -->
      <div class="panel panel-default">
        <div class="panel-body">
          <div class="row">
            <div class="col-md-3">
              <select 
              class="form-control" 
              ng-model="selectedStatus"
              ng-change="onStatusChange()"
              ng-options="status.name as status.label for status in orderStatuses">
              </select>
            </div>
            <div class="col-md-6">
              <div class="input-group">
                <input
                  type="text"
                  class="form-control"
                  placeholder="Search all orders"
                  ng-model="searchText"
                />
                <span class="input-group-btn">
                  <button class="btn btn-default" type="button">Search</button>
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Order List -->
      <div class="panel panel-default" ng-repeat="order in orders | filter:searchText">
        <div class="panel-heading">
          <div class="row">
            <div class="col-md-3">
              <b>ORDER PLACED</b><br />
              <span class="order-date">{{ order.placedDate }}</span>
            </div>
            <div class="col-md-3">
              <strong>TOTAL</strong><br />
              <span>{{ order.total }}</span>
            </div>
            <div class="col-md-3">
              <strong>SHIP TO</strong><br />
              <span>{{ order.shipTo }}</span>
            </div>
            <div class="col-md-3">
              <strong>ORDER # {{ order.orderId }}</strong><br />
              <a href="javascript:void(0);">View order details</a>
            </div>
          </div>
        </div>
        <div class="panel-body">
          <div class="row">
            <div class="col-md-8">
              <div class="table-responsive no-border">
                <table class="table">
                  <tr>
                    <td width="100">
                      <img ng-src="{{ order.item.img }}" class="img-thumbnail" alt="Product" />
                    </td>
                    <td>
                      <h4><a ng-href="{{ order.item.link }}">{{ order.item.name }}</a></h4>
                      <span class="order-status status-{{ order.statusClass }}">{{ order.status }}</span>
                    </td>
                    <td class="pull-right">
                      Qty: {{ order.quantity }}
                    </td>
                  </tr>
                </table>
              </div>
            </div>
            <div class="col-md-4">
              <div class="action-buttons">
                <a ng-href="{{ order.item.link }}"><button class="btn btn-default">Buy it again</button></a>
                <button class="btn btn-default" ng-if="showCancel(order)" ng-click="cancelOrder(order)">Cancel order</button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div ng-if="(orders | filter:searchText).length === 0">
        <p>No orders found</p>
      </div>
    </div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
